<Page x:Class="Template10.Demo.SecretServiceDemo.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      mc:Ignorable="d">

	<Grid x:Name="RootGrid"
	      Margin="0"
	      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>

		<ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Hidden">

			<Grid x:Name="ContentGrid"
			      MaxWidth="500"
			      Margin="0,48"
			      HorizontalAlignment="Center"
			      VerticalAlignment="Stretch">

				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0"
				           HorizontalAlignment="Center"
				           FontSize="18"
				           TextAlignment="Center"
				           TextWrapping="Wrap">
					<Run FontWeight="Bold" Text="Usage Demo for" />
					<LineBreak />
					<Hyperlink NavigateUri="https://github.com/Windows-XAML/Template10/tree/master/Services/Template10.Services.SecretService">
						<Run Text="Template10.Services.SecretService" />
					</Hyperlink>
				</TextBlock>

				<RelativePanel Grid.Row="1"
				               Width="300"
				               Margin="10,18"
				               Padding="12"
				               HorizontalAlignment="Center"
				               BorderBrush="Silver"
				               BorderThickness="1">

					<TextBlock x:Name="SetPwdLabel"
					           Margin="6,0"
					           FontSize="18"
					           RelativePanel.AlignLeftWithPanel="True"
					           RelativePanel.AlignTopWithPanel="True"
					           Text="Step 1: Set Password" />

					<PasswordBox x:Name="PwdEnterTextBox"
					             Margin="6"
					             PlaceholderText="Please type new password"
					             RelativePanel.AlignLeftWithPanel="True"
					             RelativePanel.AlignRightWithPanel="True"
					             RelativePanel.Below="SetPwdLabel" />

					<PasswordBox x:Name="PwdConfirmTextBox"
					             Margin="6"
					             PlaceholderText="Please confirm password"
					             RelativePanel.AlignLeftWithPanel="True"
					             RelativePanel.AlignRightWithPanel="True"
					             RelativePanel.Below="PwdEnterTextBox" />

					<Button x:Name="PasswordOkButton"
					        Width="80"
					        Margin="6"
					        Content="OK"
					        RelativePanel.AlignRightWithPanel="True"
					        RelativePanel.Below="PwdConfirmTextBox"
					        Tapped="PasswordOkButton_Tapped" />
				</RelativePanel>

				<RelativePanel Grid.Row="2"
				               Width="300"
				               Margin="10,18"
				               Padding="12"
				               HorizontalAlignment="Center"
				               BorderBrush="Silver"
				               BorderThickness="1">

					<TextBlock x:Name="GetPwdLabel"
					           FontSize="18"
					           RelativePanel.AlignLeftWithPanel="True"
					           RelativePanel.AlignTopWithPanel="True"
					           Text="Step 2: Verify Password" />

					<PasswordBox x:Name="PwdSignInTextBox"
					             Margin="6"
					             PlaceholderText="Type password to sign in"
					             RelativePanel.AlignLeftWithPanel="True"
					             RelativePanel.AlignRightWithPanel="True"
					             RelativePanel.Below="GetPwdLabel" />

					<Button x:Name="PwdSignInOkButton"
					        Width="80"
					        Margin="6"
					        Content="OK"
					        RelativePanel.AlignRightWithPanel="True"
					        RelativePanel.Below="PwdSignInTextBox"
					        Tapped="PwdSignInOkButton_Tapped" />
				</RelativePanel>

				<RelativePanel Grid.Row="3"
				               Width="300"
				               Margin="10,18"
				               Padding="0,6,6,6"
				               HorizontalAlignment="Center"
				               BorderBrush="Silver"
				               BorderThickness="1">
					<RelativePanel.Resources>

						<Style x:Key="tb" TargetType="TextBlock">
							<Setter Property="TextWrapping" Value="Wrap" />
							<Setter Property="Opacity" Value="0.8" />
							<Setter Property="FontSize" Value="13" />
							<Setter Property="FontFamily" Value="Segoe WP Light" />
						</Style>

						<DataTemplate x:Key="BulletedText">
							<Grid Margin="0,12,0,0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>

								<Ellipse Grid.Column="0"
								         Width="10"
								         Height="10"
								         Margin="12,6"
								         VerticalAlignment="Top"
								         Fill="DodgerBlue"
								         Opacity="0.6" />

								<TextBlock Grid.Column="1"
								           VerticalAlignment="Top"
								           Style="{StaticResource tb}"
								           Text="{Binding}" />
							</Grid>
						</DataTemplate>
					</RelativePanel.Resources>

					<ContentPresenter x:Name="parag1"
					                  HorizontalAlignment="Stretch"
					                  Content="In Step 1, you get the secret as a user input, in this case a password, validate if it meets all the criteria for security (such as password length, password strength, etc.) before saving into a secret vault (which actually is operating system's Credential Locker). Here we only check the length but in practical application much more need to be done for robust security policy."
					                  ContentTemplate="{StaticResource BulletedText}"
					                  RelativePanel.AlignLeftWithPanel="True"
					                  RelativePanel.AlignRightWithPanel="True"
					                  RelativePanel.AlignTopWithPanel="True" />

					<ContentPresenter x:Name="parag2"
					                  HorizontalAlignment="Stretch"
					                  Content="Step 2 provides a simple user authentication by comparing a secret supplied by the user (say, when signing in with a password) against a secret already stored (which the SecretService does the necessary retrieval from the Credental Locker and comparison with the input)."
					                  ContentTemplate="{StaticResource BulletedText}"
					                  RelativePanel.AlignLeftWithPanel="True"
					                  RelativePanel.AlignRightWithPanel="True"
					                  RelativePanel.Below="parag1" />

					<ContentPresenter x:Name="parag3"
					                  HorizontalAlignment="Stretch"
					                  Content="You can only store up to ten credentials per app in operating system's Credential Locker and an attempt to store more will throw an exception; In practice, this is not a limitation as you very seldom need that many in a typical app. Each secret is identified by its unique key which is used to store and retrieve it. And the various keyed secrets (max 10) are kept under one container name that is unique to an app."
					                  ContentTemplate="{StaticResource BulletedText}"
					                  RelativePanel.AlignLeftWithPanel="True"
					                  RelativePanel.AlignRightWithPanel="True"
					                  RelativePanel.Below="parag2" />

					<ContentPresenter x:Name="parag4"
					                  HorizontalAlignment="Stretch"
					                  Content="Template10.Services.SecretService conveniently uses a unique container name derived from app's namespace and SecretHelper class Type. GetType().ToString() statement provides the unique identifier. You don't need to be concerned with this as this is automatically handled for you by the SecretService."
					                  ContentTemplate="{StaticResource BulletedText}"
					                  RelativePanel.AlignLeftWithPanel="True"
					                  RelativePanel.AlignRightWithPanel="True"
					                  RelativePanel.Below="parag3" />

				</RelativePanel>
			</Grid>

		</ScrollViewer>

	</Grid>
</Page>
