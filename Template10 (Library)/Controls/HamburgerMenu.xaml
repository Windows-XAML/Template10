<UserControl x:Class="Template10.Controls.HamburgerMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Converters="using:Template10.Converters"
             xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
             xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="using:Template10.Controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             x:Name="ThisPage"
             d:DesignHeight="400"
             d:DesignWidth="400"
             mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>

            <Converters:ValueWhenConverter x:Name="ReverseBooleanConverter">
                <Converters:ValueWhenConverter.When>
                    <x:Boolean>True</x:Boolean>
                </Converters:ValueWhenConverter.When>
                <Converters:ValueWhenConverter.Value>
                    <x:Boolean>False</x:Boolean>
                </Converters:ValueWhenConverter.Value>
                <Converters:ValueWhenConverter.Otherwise>
                    <x:Boolean>True</x:Boolean>
                </Converters:ValueWhenConverter.Otherwise>
            </Converters:ValueWhenConverter>

            <Style x:Key="HamburgerButtonStyle" TargetType="Button">
                <Setter Property="TabIndex" Value="1" />
                <Setter Property="Height" Value="48" />
                <Setter Property="Width" Value="48" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="RootGrid"
                                  Width="{TemplateBinding Width}"
                                  Height="{TemplateBinding Height}"
                                  Background="{TemplateBinding Background}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="HoverOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="PressedOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="PressedOverlay"
                                           Fill="White"
                                           Opacity=".4"
                                           Visibility="Collapsed" />
                                <Rectangle x:Name="HoverOverlay"
                                           Fill="White"
                                           Opacity=".2"
                                           Visibility="Collapsed" />
                                <FontIcon x:Name="ContentPresenter"
                                          FontSize="20"
                                          Foreground="{TemplateBinding Foreground}"
                                          Glyph="&#xE700;" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Width" Value="48" />
            </Style>

            <DataTemplate x:Name="NavButtonLiteralTemplate" x:DataType="local:HamburgerButtonInfo">
                <ContentPresenter x:Name="ContentPresenter"
                                  Width="{Binding PaneWidth, ElementName=ThisPage}"
                                  MinWidth="48"
                                  MaxWidth="{x:Bind MaxWidth, Mode=TwoWay}"
                                  Content="{Binding Content}"
                                  ToolTipService.ToolTip="{Binding Path=(ToolTipService.ToolTip)}"
                                  Visibility="{Binding Visibility, Mode=TwoWay}" />
            </DataTemplate>

            <DataTemplate x:Name="NavToggleButtonTemplate" x:DataType="local:HamburgerButtonInfo">
                <ToggleButton Width="{Binding PaneWidth, ElementName=ThisPage}"
                              MinWidth="48"
                              MaxWidth="{x:Bind MaxWidth, Mode=TwoWay}"
                              AutomationProperties.Name="Hamburger Menu Item"
                              Checked="NavButtonChecked"
                              Command="{Binding NavCommand, ElementName=ThisPage}"
                              CommandParameter="{Binding}"
                              Content="{Binding Content}"
                              Holding="NavButton_Holding"
                              IsChecked="{Binding IsChecked, Mode=TwoWay}"
                              IsEnabled="{Binding IsEnabled, Mode=TwoWay}"
                              IsHitTestVisible="{Binding IsChecked, Converter={StaticResource ReverseBooleanConverter}}"
                              IsTabStop="{Binding IsChecked, Converter={StaticResource ReverseBooleanConverter}}"
                              Loaded="NavButton_Loaded"
                              RightTapped="NavButton_RightTapped"
                              TabIndex="2"
                              ToolTipService.ToolTip="{Binding Path=(ToolTipService.ToolTip)}"
                              Unchecked="NavButtonUnchecked"
                              Visibility="{Binding Visibility, Mode=TwoWay}">
                    <ToggleButton.Template>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid x:Name="RootGrid"
                                  Width="{Binding PaneWidth, ElementName=ThisPage}"
                                  Background="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates" CurrentStateChanged="NavButton_VisualStateChanged">
                                        <VisualState x:Name="Normal">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="{Binding NavButtonForeground, ElementName=ThisPage}" />
                                                <Setter Target="ContentPresenter.Background" Value="{Binding NavButtonBackground, ElementName=ThisPage}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="{Binding NavButtonHoverForeground, ElementName=ThisPage}" />
                                                <Setter Target="ContentPresenter.Background" Value="{Binding NavButtonHoverBackground, ElementName=ThisPage}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="{Binding NavButtonPressedForeground, ElementName=ThisPage}" />
                                                <Setter Target="ContentPresenter.Background" Value="{Binding NavButtonPressedBackground, ElementName=ThisPage}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Checked">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="{Binding NavButtonCheckedForeground, ElementName=ThisPage}" />
                                                <Setter Target="ContentPresenter.Background" Value="{Binding NavButtonCheckedBackground, ElementName=ThisPage}" />
                                                <Setter Target="Indicator.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="{Binding NavButtonCheckedForeground, ElementName=ThisPage}" />
                                                <Setter Target="ContentPresenter.Background" Value="{Binding NavButtonCheckedBackground, ElementName=ThisPage}" />
                                                <Setter Target="Indicator.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPressed">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="{Binding NavButtonCheckedForeground, ElementName=ThisPage}" />
                                                <Setter Target="ContentPresenter.Background" Value="{Binding NavButtonCheckedBackground, ElementName=ThisPage}" />
                                                <Setter Target="Indicator.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="CheckedDisabled">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="{Binding NavButtonCheckedForeground, ElementName=ThisPage}" />
                                                <Setter Target="ContentPresenter.Background" Value="{Binding NavButtonCheckedBackground, ElementName=ThisPage}" />
                                                <Setter Target="Indicator.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="DimGray" />
                                                <Setter Target="ContentPresenter.Background" Value="Transparent" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Indeterminate" />
                                        <VisualState x:Name="IndeterminatePointerOver" />
                                        <VisualState x:Name="IndeterminatePressed" />
                                        <VisualState x:Name="IndeterminateDisabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="ContentPresenter" Content="{Binding Content}" />
                                <Rectangle x:Name="Indicator"
                                           Width="4"
                                           HorizontalAlignment="Left"
                                           Fill="{Binding NavButtonCheckedIndicatorBrush, ElementName=ThisPage}"
                                           Visibility="Collapsed" />
                            </Grid>
                        </ControlTemplate>
                    </ToggleButton.Template>
                </ToggleButton>
            </DataTemplate>

            <DataTemplate x:Name="NavCommandButtonTemplate" x:DataType="local:HamburgerButtonInfo">
                <Button Width="{Binding PaneWidth, ElementName=ThisPage}"
                        MinWidth="48"
                        MaxWidth="{x:Bind MaxWidth}"
                        AutomationProperties.Name="Hamburger Menu Item"
                        BorderBrush="Red"
                        BorderThickness="1"
                        Command="{Binding NavCommand, ElementName=ThisPage}"
                        CommandParameter="{Binding}"
                        Content="{x:Bind Content}"
                        Holding="NavButton_Holding"
                        IsEnabled="{x:Bind IsEnabled}"
                        Loaded="NavButton_Loaded"
                        RightTapped="NavButton_RightTapped"
                        TabIndex="2"
                        ToolTipService.ToolTip="{x:Bind Path=(ToolTipService.ToolTip)}"
                        Visibility="{x:Bind Visibility}">
                    <Button.Template>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="RootGrid"
                                  Width="{Binding PaneWidth, ElementName=ThisPage}"
                                  Background="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates" CurrentStateChanged="NavButton_VisualStateChanged">
                                        <VisualState x:Name="Normal">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="{Binding NavButtonForeground, ElementName=ThisPage}" />
                                                <Setter Target="ContentPresenter.Background" Value="{Binding NavButtonBackground, ElementName=ThisPage}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="{Binding NavButtonHoverForeground, ElementName=ThisPage}" />
                                                <Setter Target="ContentPresenter.Background" Value="{Binding NavButtonHoverBackground, ElementName=ThisPage}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="{Binding NavButtonPressedForeground, ElementName=ThisPage}" />
                                                <Setter Target="ContentPresenter.Background" Value="{Binding NavButtonPressedBackground, ElementName=ThisPage}" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled">
                                            <VisualState.Setters>
                                                <Setter Target="ContentPresenter.Foreground" Value="DimGray" />
                                                <Setter Target="ContentPresenter.Background" Value="Transparent" />
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <ContentPresenter x:Name="ContentPresenter" Content="{Binding Content}" />
                            </Grid>
                        </ControlTemplate>
                    </Button.Template>
                </Button>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="RootGrid">

        <VisualStateManager.VisualStateGroups>

            <VisualStateGroup x:Name="VisualStateGroup">

                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNarrowTrigger" MinWindowWidth="{Binding VisualStateNarrowMinWidth, ElementName=ThisPage, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShellSplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="ShellSplitView.IsPaneOpen" Value="False" />
                        <Setter Target="HamburgerButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNormalTrigger" MinWindowWidth="{Binding VisualStateNormalMinWidth, ElementName=ThisPage, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShellSplitView.DisplayMode" Value="CompactOverlay" />
                        <Setter Target="ShellSplitView.IsPaneOpen" Value="False" />
                        <Setter Target="HamburgerButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateWideTrigger" MinWindowWidth="{Binding VisualStateWideMinWidth, ElementName=ThisPage, Mode=OneWay}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShellSplitView.DisplayMode" Value="CompactInline" />
                        <Setter Target="HamburgerButton.Visibility" Value="Visible" />
                        <Setter Target="ShellSplitView.IsPaneOpen" Value="True" />
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <ContentControl x:Name="Header"
                        Height="48"
                        Margin="48,0,0,0"
                        VerticalAlignment="Top"
                        HorizontalContentAlignment="Stretch"
                        Content="{Binding HeaderContent, ElementName=ThisPage}"
                        IsTabStop="False">
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=HamburgerButton}" Value="Visible">
                    <Core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=Header}">
                        <Core:ChangePropertyAction.Value>
                            <Thickness>48,0,0,0</Thickness>
                        </Core:ChangePropertyAction.Value>
                    </Core:ChangePropertyAction>
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=HamburgerButton, Mode=OneWay}" Value="Collapsed">
                    <Core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=Header}">
                        <Core:ChangePropertyAction.Value>
                            <Thickness>0,0,0,0</Thickness>
                        </Core:ChangePropertyAction.Value>
                    </Core:ChangePropertyAction>
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </ContentControl>

        

        <SplitView x:Name="ShellSplitView"
                   Grid.Column="0"
                   AutomationProperties.Name="Jerry Nixon"
                   DisplayMode="Inline"
                   IsPaneOpen="False"
                   IsTabStop="False"
                   OpenPaneLength="{x:Bind PaneWidth, Mode=OneWay}"
                   PaneBackground="Transparent">

            <SplitView.Pane>

                <Grid x:Name="PaneContent"
                      Margin="0,48,0,0"
                      Background="{x:Bind NavAreaBackground, Mode=OneWay}"
                      BorderBrush="{x:Bind PaneBorderBrush, Mode=OneWay}"
                      BorderThickness="{x:Bind PaneBorderThickness}"
                      ManipulationDelta="PaneContent_ManipulationDelta"
                      ManipulationMode="TranslateX"
                      Tapped="PaneContent_Tapped">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Interactivity:Interaction.Behaviors>
                        <Core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=HamburgerButton, Mode=OneWay}" Value="Visible">
                            <Core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}">
                                <Core:ChangePropertyAction.Value>
                                    <Thickness>0,48,0,0</Thickness>
                                </Core:ChangePropertyAction.Value>
                            </Core:ChangePropertyAction>
                        </Core:DataTriggerBehavior>
                        <Core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=HamburgerButton, Mode=OneWay}" Value="Collapsed">
                            <b:ConditionalAction xmlns:b="using:Template10.Behaviors"
                                                 LeftValue="{x:Bind HeaderContent}"
                                                 Operator="IsNull">
                                <Core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}">
                                    <Core:ChangePropertyAction.Value>
                                        <Thickness>0,0,0,0</Thickness>
                                    </Core:ChangePropertyAction.Value>
                                </Core:ChangePropertyAction>
                            </b:ConditionalAction>
                        </Core:DataTriggerBehavior>
                        <Core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=HamburgerButton, Mode=OneWay}" Value="Collapsed">
                            <b:ConditionalAction xmlns:b="using:Template10.Behaviors"
                                                 LeftValue="{x:Bind HeaderContent}"
                                                 Operator="IsNotNull">
                                <Core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}">
                                    <Core:ChangePropertyAction.Value>
                                        <Thickness>0,48,0,0</Thickness>
                                    </Core:ChangePropertyAction.Value>
                                </Core:ChangePropertyAction>
                            </b:ConditionalAction>
                        </Core:DataTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>

                    <ScrollViewer Grid.Row="0" TabIndex="2"
                                  AutomationProperties.AccessibilityView="Raw"
                                  VerticalScrollBarVisibility="Auto">

                        <ItemsControl x:Name="PrimaryButtonContainer"
                                      IsTabStop="False"
                                      ItemsSource="{Binding PrimaryButtons, ElementName=ThisPage}">

                            <ItemsControl.ItemTemplateSelector>
                                <local:HamburgerButtonTemplateSelected CommandTemplate="{StaticResource NavCommandButtonTemplate}"
                                                                       LiteralTemplate="{StaticResource NavButtonLiteralTemplate}"
                                                                       ToggleTemplate="{StaticResource NavToggleButtonTemplate}" />
                            </ItemsControl.ItemTemplateSelector>

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <!--  designtime  -->
                            <local:HamburgerButtonInfo>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48"
                                                Height="48"
                                                Symbol="Home" />
                                    <TextBlock Margin="12,0,0,0"
                                               VerticalAlignment="Center"
                                               Text="Lorem ipsum" />
                                </StackPanel>
                            </local:HamburgerButtonInfo>
                            <local:HamburgerButtonInfo>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48"
                                                Height="48"
                                                Symbol="Admin" />
                                    <TextBlock Margin="12,0,0,0"
                                               VerticalAlignment="Center"
                                               Text="Lorem ipsum" />
                                </StackPanel>
                            </local:HamburgerButtonInfo>
                            <local:HamburgerButtonInfo>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48"
                                                Height="48"
                                                Symbol="Clock" />
                                    <TextBlock Margin="12,0,0,0"
                                               VerticalAlignment="Center"
                                               Text="Lorem ipsum" />
                                </StackPanel>
                            </local:HamburgerButtonInfo>

                        </ItemsControl>

                    </ScrollViewer>

                    <ItemsControl x:Name="SecondaryButtonContainer"
                                  Grid.Row="1"
                                  IsTabStop="False" TabIndex="3"
                                  ItemsSource="{Binding SecondaryButtons, ElementName=ThisPage}">

                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel BorderBrush="{Binding SecondarySeparator, ElementName=ThisPage, FallbackValue=White}"
                                            BorderThickness="0,1,0,0"
                                            Loaded="SecondaryButtonStackPanel_Loaded" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplateSelector>
                            <local:HamburgerButtonTemplateSelected CommandTemplate="{StaticResource NavCommandButtonTemplate}"
                                                                   LiteralTemplate="{StaticResource NavButtonLiteralTemplate}"
                                                                   ToggleTemplate="{StaticResource NavToggleButtonTemplate}" />
                        </ItemsControl.ItemTemplateSelector>

                        <!--  designtime  -->
                        <local:HamburgerButtonInfo>
                            <StackPanel Orientation="Horizontal">
                                <SymbolIcon Width="48"
                                            Height="48"
                                            Symbol="Contact" />
                                <TextBlock Margin="12,0,0,0"
                                           VerticalAlignment="Center"
                                           Text="Lorem ipsum" />
                            </StackPanel>
                        </local:HamburgerButtonInfo>
                        <local:HamburgerButtonInfo>
                            <StackPanel Orientation="Horizontal">
                                <SymbolIcon Width="48"
                                            Height="48"
                                            Symbol="Setting" />
                                <TextBlock Margin="12,0,0,0"
                                           VerticalAlignment="Center"
                                           Text="Lorem ipsum" />
                            </StackPanel>
                        </local:HamburgerButtonInfo>

                    </ItemsControl>

                </Grid>

            </SplitView.Pane>

        </SplitView>
        <Grid x:Name="HamburgerButtonGrid"
              Grid.Row="0"
              Width="{x:Bind HamburgerButtonGridWidth, Mode=OneWay}"
              HorizontalAlignment="Left"
              VerticalAlignment="Top"
              Background="{x:Bind HamburgerBackground, FallbackValue=DarkRed, Mode=OneWay}"
              Visibility="{x:Bind HamburgerButtonVisibility, Mode=OneWay}">
            <Button x:Name="HamburgerButton"
                    AutomationProperties.Name="Hamburger Menu Button"
                    Background="Transparent"
                    TabIndex="1"
                    Command="{x:Bind HamburgerCommand}"
                    Foreground="{x:Bind HamburgerForeground, FallbackValue=White, Mode=OneWay}"
                    RenderTransformOrigin="0.5,0.5"
                    Style="{StaticResource HamburgerButtonStyle}">
                <FontIcon FontSize="20" Glyph="&#xE700;" />
            </Button>
        </Grid>
    </Grid>
</UserControl>
