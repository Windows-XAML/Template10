<UserControl x:Class="Template10.Controls.HamburgerMenu" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
             xmlns:Interactivity="using:Microsoft.Xaml.Interactivity" xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="using:Template10.Controls" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             x:Name="ThisPage" d:DesignHeight="400"
             d:DesignWidth="400" mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>

            <!--  defaults  -->
            <SolidColorBrush x:Name="HamburgerBackgroundBrush" Color="#FFD13438" />
            <SolidColorBrush x:Name="HamburgerForegroundBrush" Color="White" />
            <SolidColorBrush x:Name="NavButtonBackgroundBrush" Color="#FFD13438" />
            <SolidColorBrush x:Name="NavButtonForegroundBrush" Color="White" />
            <SolidColorBrush x:Name="NavAreaBackgroundBrush" Color="White" />
            <SolidColorBrush x:Name="SecondaryBorderBrush" Color="DimGray" />
            <SolidColorBrush x:Name="NavButtonCheckedOverlayBackgroundBrush" Color="#FF7D1F22" />
            <SolidColorBrush x:Name="NavButtonHoverOverlayBackgroundBrush" Color="#FF434343" />

            <Style x:Key="NavButtonStyle" TargetType="ToggleButton">
                <Setter Property="Height" Value="48" />
                <Setter Property="MinWidth" Value="48" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Grid x:Name="RootGrid" Width="{Binding PaneWidth, ElementName=ThisPage}" Background="Transparent">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="HoverOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="PressedOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                        <VisualState x:Name="Checked">
                                            <VisualState.Setters>
                                                <Setter Target="CheckedOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="CheckedOverlay.Visibility" Value="Visible" />
                                                <Setter Target="HoverOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedPressed">
                                            <VisualState.Setters>
                                                <Setter Target="CheckedOverlay.Visibility" Value="Visible" />
                                                <Setter Target="PressedOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                            <Storyboard>
                                                <PointerDownThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="CheckedDisabled">
                                            <VisualState.Setters>
                                                <Setter Target="CheckedOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Indeterminate" />
                                        <VisualState x:Name="IndeterminatePointerOver" />
                                        <VisualState x:Name="IndeterminatePressed" />
                                        <VisualState x:Name="IndeterminateDisabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="CheckedOverlay" Visibility="Collapsed">
                                    <Rectangle Fill="{Binding NavButtonCheckedOverlayBackground, ElementName=ThisPage, FallbackValue=Navy}" />
                                </Grid>
                                <Rectangle x:Name="PressedOverlay" Fill="White"
                                           Opacity=".2" Visibility="Collapsed" />
                                <Rectangle x:Name="HoverOverlay" Fill="{Binding NavButtonHoverOverlayBackground, ElementName=ThisPage, FallbackValue=Gray}" Visibility="Collapsed" />
                                <ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Left"
                                                  VerticalAlignment="Stretch" HorizontalContentAlignment="Left"
                                                  VerticalContentAlignment="Center" Background="Transparent"
                                                  Content="{TemplateBinding Content}" FontSize="16"
                                                  Foreground="{Binding NavButtonForeground, ElementName=ThisPage, FallbackValue=White}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="UseSystemFocusVisuals" Value="True" />
            </Style>

            <Style x:Key="HamburgerButtonStyle" TargetType="Button">
                <Setter Property="Height" Value="48" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid x:Name="RootGrid" Background="{Binding HamburgerBackground, ElementName=ThisPage, FallbackValue=Navy}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal">
                                            <Storyboard>
                                                <PointerUpThemeAnimation Storyboard.TargetName="RootGrid" />
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="PointerOver">
                                            <VisualState.Setters>
                                                <Setter Target="HoverOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <VisualState.Setters>
                                                <Setter Target="PressedOverlay.Visibility" Value="Visible" />
                                            </VisualState.Setters>
                                        </VisualState>
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Rectangle x:Name="PressedOverlay" Fill="White"
                                           Opacity=".2" Visibility="Collapsed" />
                                <Rectangle x:Name="HoverOverlay" Fill="White"
                                           Opacity=".1" Visibility="Collapsed" />
                                <FontIcon x:Name="ContentPresenter" FontSize="20"
                                          Foreground="{Binding HamburgerForeground, ElementName=ThisPage, FallbackValue=White}" Glyph="&#xE700;" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="UseSystemFocusVisuals" Value="True" />
                <Setter Property="VerticalAlignment" Value="Top" />
                <Setter Property="Width" Value="48" />
            </Style>

            <DataTemplate x:Name="NavButtonTemplate">
                <RadioButton Width="{Binding PaneWidth, ElementName=ThisPage, FallbackValue=220}" Height="48"
                             Command="{Binding NavCommand, ElementName=ThisPage}" CommandParameter="{Binding}"
                             GroupName="Nav" IsChecked="{Binding IsChecked, Mode=TwoWay}"
                             IsEnabled="{Binding IsEnabled, Mode=TwoWay}" Loaded="NavButton_Loaded"
                             Tag="{Binding Content}" Tapped="NavButton_Tapped"
                             Visibility="{Binding Visibility, Mode=TwoWay}">
                    <RadioButton.Template>
                        <ControlTemplate>
                            <ToggleButton Width="{Binding Width, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Command="{Binding Command, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                          CommandParameter="{Binding CommandParameter, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Content="{Binding Tag, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                          IsChecked="{Binding IsChecked, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource NavButtonStyle}" />
                        </ControlTemplate>
                    </RadioButton.Template>
                </RadioButton>
            </DataTemplate>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid x:Name="RootGrid">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">

                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0" To="VisualStateWide">
                        <Storyboard>
                            <DoubleAnimation Duration="0:0:0.6" Storyboard.TargetName="HamburgerButton"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateY)" To="-48"
                                             d:IsOptimized="True">
                                <DoubleAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseIn" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </VisualTransition>
                </VisualStateGroup.Transitions>

                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNarrowTrigger" MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShellSplitView.DisplayMode" Value="Overlay" />
                        <Setter Target="ShellSplitView.IsPaneOpen" Value="False" />
                        <Setter Target="HamburgerButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateNormalTrigger" MinWindowWidth="521" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShellSplitView.DisplayMode" Value="CompactOverlay" />
                        <Setter Target="ShellSplitView.IsPaneOpen" Value="False" />
                        <Setter Target="HamburgerButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>

                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger x:Name="VisualStateWideTrigger" MinWindowWidth="-1" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="ShellSplitView.DisplayMode" Value="CompactInline" />
                        <Setter Target="HamburgerButton.Visibility" Value="Collapsed" />
                        <Setter Target="ShellSplitView.IsPaneOpen" Value="True" />
                    </VisualState.Setters>
                </VisualState>

            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <ContentControl Height="48" Margin="48,0,0,0"
                        VerticalAlignment="Top" HorizontalContentAlignment="Stretch"
                        Content="{Binding HeaderContent, ElementName=ThisPage}">
            <Interactivity:Interaction.Behaviors>
                <Core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=HamburgerButton}" Value="Visible">
                    <Core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}">
                        <Core:ChangePropertyAction.Value>
                            <Thickness>48,0,0,0</Thickness>
                        </Core:ChangePropertyAction.Value>
                    </Core:ChangePropertyAction>
                </Core:DataTriggerBehavior>
                <Core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=HamburgerButton, Mode=OneWay}" Value="Collapsed">
                    <Core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}" />
                </Core:DataTriggerBehavior>
            </Interactivity:Interaction.Behaviors>
        </ContentControl>

        <SplitView x:Name="ShellSplitView" Grid.Column="0"
                   DisplayMode="Inline" OpenPaneLength="220"
                   PaneBackground="Transparent">

            <SplitView.Pane>

                <Grid x:Name="PaneContent" Margin="0,48,0,0"
                      Background="{Binding NavAreaBackground, ElementName=ThisPage, FallbackValue=Blue}" BorderBrush="{Binding SecondarySeparator, ElementName=ThisPage, FallbackValue=White}"
                      BorderThickness="0,0,1,0" Tapped="PaneContent_Tapped">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>

                    <Interactivity:Interaction.Behaviors>
                        <Core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=HamburgerButton, Mode=OneWay}" Value="Visible">
                            <Core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}">
                                <Core:ChangePropertyAction.Value>
                                    <Thickness>0,48,0,0</Thickness>
                                </Core:ChangePropertyAction.Value>
                            </Core:ChangePropertyAction>
                        </Core:DataTriggerBehavior>
                        <Core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=HamburgerButton, Mode=OneWay}" Value="Collapsed">
                            <Core:ChangePropertyAction PropertyName="Margin" TargetObject="{Binding ElementName=PaneContent}">
                                <Core:ChangePropertyAction.Value>
                                    <Thickness>0,0,0,0</Thickness>
                                </Core:ChangePropertyAction.Value>
                            </Core:ChangePropertyAction>
                        </Core:DataTriggerBehavior>
                    </Interactivity:Interaction.Behaviors>

                    <ScrollViewer Grid.Row="0" VerticalScrollBarVisibility="Auto">

                        <ItemsControl ItemTemplate="{StaticResource NavButtonTemplate}" ItemsSource="{Binding PrimaryButtons, ElementName=ThisPage}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <!--  design data  -->
                            <local:HamburgerButtonInfo>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48" Height="48" Symbol="Back" />
                                    <TextBlock Margin="12,0,0,0" VerticalAlignment="Center" Text="Left" />
                                </StackPanel>
                            </local:HamburgerButtonInfo>
                            <local:HamburgerButtonInfo>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48" Height="48" Symbol="Up" />
                                    <TextBlock Margin="12,0,0,0" VerticalAlignment="Center" Text="Top" />
                                </StackPanel>
                            </local:HamburgerButtonInfo>
                            <local:HamburgerButtonInfo>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48" Height="48" Symbol="Forward" />
                                    <TextBlock Margin="12,0,0,0" VerticalAlignment="Center" Text="Right" />
                                </StackPanel>
                            </local:HamburgerButtonInfo>
                            <local:HamburgerButtonInfo>
                                <StackPanel Orientation="Horizontal">
                                    <SymbolIcon Width="48" Height="48" Symbol="Download" />
                                    <TextBlock Margin="12,0,0,0" VerticalAlignment="Center" Text="Bottom" />
                                </StackPanel>
                            </local:HamburgerButtonInfo>

                        </ItemsControl>

                    </ScrollViewer>

                    <ItemsControl Grid.Row="1" ItemTemplate="{StaticResource NavButtonTemplate}" ItemsSource="{Binding SecondaryButtons, ElementName=ThisPage}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <StackPanel BorderBrush="{Binding SecondarySeparator, ElementName=ThisPage, FallbackValue=White}" BorderThickness="0,1,0,0" />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <!--  designtime  -->
                        <local:HamburgerButtonInfo>
                            <StackPanel Orientation="Horizontal">
                                <SymbolIcon Width="48" Height="48" Symbol="Setting" />
                                <TextBlock Margin="12,0,0,0" VerticalAlignment="Center" Text="Settings" />
                            </StackPanel>
                        </local:HamburgerButtonInfo>

                    </ItemsControl>

                </Grid>

            </SplitView.Pane>

        </SplitView>

        <Button x:Name="HamburgerButton" Grid.Row="0"
                Command="{x:Bind HamburgerCommand}" RenderTransformOrigin="0.5,0.5"
                Style="{StaticResource HamburgerButtonStyle}">
            <Button.RenderTransform>
                <CompositeTransform />
            </Button.RenderTransform>
            <StackPanel Orientation="Horizontal">
                <FontIcon FontSize="20" Glyph="&#xE700;" />
            </StackPanel>
        </Button>

    </Grid>
</UserControl>
