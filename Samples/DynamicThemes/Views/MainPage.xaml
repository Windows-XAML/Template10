<Page x:Class="Sample.Views.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:Behaviors="using:Template10.Behaviors"
      xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:controls="using:Template10.Controls"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="using:Sample.Views"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:Sample.ViewModels"
      mc:Ignorable="d">

    <Page.DataContext>
        <vm:MainPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                        <Setter Target="stateTextBox.Text" Value="Narrow Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                        <Setter Target="stateTextBox.Text" Value="Normal Visual State" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                        <Setter Target="stateTextBox.Text" Value="Wide Visual State" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <controls:PageHeader x:Name="pageHeader"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True"
                             Style="{ThemeResource PageHeaderStyle}"
                             Text="Main Page">

            <!--  secondary commands  -->
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton Click="{x:Bind ViewModel.GotoSettings}" Label="Settings" />
                <AppBarButton Click="{x:Bind ViewModel.GotoPrivacy}" Label="Privacy" />
                <AppBarButton Click="{x:Bind ViewModel.GotoAbout}" Label="About" />
            </controls:PageHeader.SecondaryCommands>

        </controls:PageHeader>

        <ScrollViewer Margin="12,72,12,12" VerticalScrollBarVisibility="Hidden">
            <TextBlock FontSize="18"
                       RelativePanel.AlignLeftWithPanel="True"
                       RelativePanel.Below="pageHeader"
                       TextWrapping="WrapWholeWords">

                <Run Text="This sample app is intended to demo runtime setting of display themes. " />
                <LineBreak />
                <LineBreak />
                <Run Text="Tap on the Settings menu button to set Light or Dark theme. " />
                <LineBreak />
                <LineBreak />
                <Run Text="For each theme, navigate to different pages to check out. Do this for menu pane open and closed." />
                <LineBreak />
                <LineBreak />
                <Run Text="The Dark and Light color settings are as per Custom.xaml style definition. " />
                <LineBreak />
                <LineBreak />
                <Run Text="Current theme setting will be saved and restored on next app session. " />
                <LineBreak />
                <LineBreak />
                <Run Text="The 'Checked Button Indicator Line' (CBIL ?) also updates dynamically as the rest of the menu components. In fact, you can choose CBIL as an option under settings menu. Try it!" />
            </TextBlock>
        </ScrollViewer>

    </RelativePanel>
</Page>
