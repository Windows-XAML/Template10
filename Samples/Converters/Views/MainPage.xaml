<Page x:Class="Sample.Views.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Sample.Views"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Template10.Controls"
    xmlns:converters="using:Template10.Converters"
    xmlns:vm="using:Sample.ViewModels" 
      xmlns:sys="System"
    mc:Ignorable="d">
    <Page.DataContext>
        <vm:MainPageViewModel />
    </Page.DataContext>
    <Page.Resources>
        <converters:ChangeTypeConverter x:Key="ChangeTypeConverter" />
        <converters:StringFormatConverter x:Key="StringFormatConverter" />
        <converters:DateTimeOffsetConverter x:Key="DateTimeOffsetConverter" />
        <converters:ValueWhenConverter x:Key="BooleanToVisibilityConverter">
            <converters:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </converters:ValueWhenConverter.When>
            <converters:ValueWhenConverter.Value>
                <Visibility>Visible</Visibility>
            </converters:ValueWhenConverter.Value>
            <converters:ValueWhenConverter.Otherwise>
                <Visibility>Collapsed</Visibility>
            </converters:ValueWhenConverter.Otherwise>
            <converters:ValueWhenConverter.OtherwiseValueBack>
                <x:Boolean>False</x:Boolean>
            </converters:ValueWhenConverter.OtherwiseValueBack>
        </converters:ValueWhenConverter>
        <converters:ValueWhenConverter x:Key="NotTrueConverter">
            <converters:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </converters:ValueWhenConverter.When>
            <converters:ValueWhenConverter.Value>
                <x:Boolean>False</x:Boolean>
            </converters:ValueWhenConverter.Value>
            <converters:ValueWhenConverter.Otherwise>
                <x:Boolean>True</x:Boolean>
            </converters:ValueWhenConverter.Otherwise>
            <converters:ValueWhenConverter.OtherwiseValueBack>
                <x:Boolean>False</x:Boolean>
            </converters:ValueWhenConverter.OtherwiseValueBack>

        </converters:ValueWhenConverter>

    </Page.Resources>
    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <!--  header  -->
        <controls:PageHeader BackButtonVisibility="Collapsed" Frame="{x:Bind Frame, Mode=OneWay}"
                             Content="Main Page" VisualStateNarrowMinWidth="-1" />

        <!--  #region content  -->

        <ScrollViewer Grid.Row="1" >
            <StackPanel Padding="12,4,4,12">
                <DatePicker Header="Date Picker Control" Date="{Binding DateTimeValue, Mode=TwoWay, Converter={StaticResource DateTimeOffsetConverter}}" />

                <TextBlock Margin="0,20">
                <Run Text="Date Conversions:" FontWeight="Bold" FontStyle="Italic" FontSize="20" />
                <LineBreak />
                <Run Text="Long date pattern:" FontWeight="Bold" />
                <Run Text="{Binding DateTimeValue, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:D\}}" />
                <LineBreak />
                <Run Text="Full date/time pattern (short time):" FontWeight="Bold" />
                <Run Text="{Binding DateTimeValue, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:f\}}" />
                <LineBreak />
                <Run Text="Year month pattern:" FontWeight="Bold" />
                <Run Text="{Binding DateTimeValue, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:Y\}}" />
                <LineBreak />
                <Run Text="RFC1123 pattern:" FontWeight="Bold" />
                <Run Text="{Binding DateTimeValue, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:r\}}" />
                </TextBlock>

                <ComboBox ItemsSource="{Binding NumberValues, Mode=OneWay}" SelectedItem="{Binding NumberValue, Mode=TwoWay}" />

                <TextBlock Margin="0,20">
                <Run Text="Number Conversions:" FontWeight="Bold" FontStyle="Italic" FontSize="20" />
                <LineBreak />
                <Run Text="Currency:" FontWeight="Bold" />
                <Run Text="{Binding NumberValue, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:C\}}" />
                <LineBreak />
                <Run Text="Exponential (3):" FontWeight="Bold" />
                <Run Text="{Binding NumberValue, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:e3\}}" />
                <LineBreak />
                <Run Text="Fixed-point (4):" FontWeight="Bold" />
                <Run Text="{Binding NumberValue, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:F4\}}" />
                <LineBreak />
                <Run Text="Percent:" FontWeight="Bold" />
                <Run Text="{Binding NumberValue, Mode=OneWay, Converter={StaticResource StringFormatConverter}, ConverterParameter=\{0:p\}}" />
                </TextBlock>

                <CheckBox Content="Change the value below by clicking on the CheckBox" IsChecked="{Binding BooleanValue, Mode=TwoWay}" />

                <TextBlock Margin="0,20">
                <Run Text="Value-When Conversion:" FontWeight="Bold" FontStyle="Italic" FontSize="20" />
                <LineBreak />
                <Run Text="Response:" FontWeight="Bold" />
                <Run>
                    <Run.Text>
                        <Binding Path="BooleanValue" Mode="OneWay">
                            <Binding.Converter>
                                <converters:ValueWhenConverter Value="Checkbox is selected" Otherwise="Checkbox is NOT selected, please select the checkbox">
                                    <converters:ValueWhenConverter.When>
                                        <x:Boolean>True</x:Boolean>
                                    </converters:ValueWhenConverter.When>
                                </converters:ValueWhenConverter>
                            </Binding.Converter>
                        </Binding>
                    </Run.Text>
                </Run>
                </TextBlock>
                <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="Change Type Converter" Style="{ThemeResource  TitleTextBlockStyle}"/>
                <DatePicker Header="Date Picker Control (Change Type Converter)" Date="{x:Bind ViewModel.DateTimeOffsetValue, Mode=TwoWay, Converter={StaticResource ChangeTypeConverter}}" />
                <CalendarDatePicker Header="Calendar Date Picker Control (Change Type Converter)" Date="{x:Bind ViewModel.DateTimeOffsetValue, Mode=TwoWay, Converter={StaticResource ChangeTypeConverter}}" />
                <Slider Header="{x:Bind ViewModel.ByteValue,Mode=OneWay,Converter={StaticResource StringFormatConverter},ConverterParameter='Slider binds to Byte - Current value \{0:N0\}'}" Value="{x:Bind ViewModel.ByteValue,Mode=TwoWay,Converter={StaticResource ChangeTypeConverter}}" Maximum="255" Width="500" HorizontalAlignment="Left"/>
                <Slider Header="{x:Bind ViewModel.DecimalValue,Mode=OneWay,Converter={StaticResource StringFormatConverter},ConverterParameter='Slider binds to Decimal - Current value \{0:N2\}'}" Value="{x:Bind ViewModel.DecimalValue,Mode=TwoWay,Converter={StaticResource ChangeTypeConverter}}" Maximum="1000" Minimum="100" Width="500" HorizontalAlignment="Left" SmallChange="5.25" LargeChange="10.5"/>

                <TextBlock TextWrapping="Wrap" Text="ValueWhenConverter (using it as Visibility and NotTrue converter)" Style="{ThemeResource  TitleTextBlockStyle}"/>
                <StackPanel Orientation="Horizontal">
                    <CheckBox x:Name="CheckShowTextBox"  Content="Check to display text" Margin="4,0"/>
                    <Button x:Name="DisplayText" IsEnabled="{x:Bind CheckShowTextBox.IsChecked,Converter={StaticResource NotTrueConverter},Mode=OneWay}" Content="Press to change visibility" Click="DisplayText_Click"/>
                    <TextBlock x:Name="ValueWhenConverterText" Text="Visibility is bound to CheckBox's IsChecked property" Visibility="{x:Bind CheckShowTextBox.IsChecked,Converter={StaticResource BooleanToVisibilityConverter},Mode=TwoWay}" VerticalAlignment="Center" Margin="4,0"/>
                </StackPanel>

                <TextBlock TextWrapping="Wrap" Text="Change Type Converter compiled binding" Style="{ThemeResource  TitleTextBlockStyle}"/>
                <StackPanel Orientation="Horizontal">
                    <ComboBox ItemsSource="{x:Bind ViewModel.SimpleModels,Mode=OneWay}" 
                              SelectedValue="{x:Bind ViewModel.SelectedSimpleModel,Mode=TwoWay,Converter={StaticResource ChangeTypeConverter}}" 
                              Width="320" >
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="{Binding IntProperty}"/>
                                    <TextBlock Text="{Binding DateProperty, Converter={StaticResource StringFormatConverter}, ConverterParameter=' on {0:d}'}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <Button x:Name="SetFirstComboItem" Content="Select first simple model from ViewModel" Margin="8,0" Click="SetFirstComboItem_Click"/>
                    <Button x:Name="SetNullValueToCombo" Content="Clear Value from ViewModel" Margin="8,0" Click="SetNullValueToCombo_Click"/>
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
        <!--  #endregion  -->

    </Grid>
</Page>
